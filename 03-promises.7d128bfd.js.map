{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,kBAkBjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEpBA,MAEFU,MACC,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACXpB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAE/D,SAAAE,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACXpB,EAAAuB,OAAOG,QAAQ,sBAAqCD,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAG7DO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MApClB1B,EAAKC,KAAK4B,iBAAiB,UAE3B,SAA6BC,GAC3BA,EAAEC,iBAMF,IALA,IAAMC,EAAgBC,OAAOjC,EAAKI,WAAW8B,OACvCC,EAAeF,OAAOjC,EAAKK,UAAU6B,OACrCE,EAAYH,OAAOjC,EAAKM,OAAO4B,OAEjChB,EAAQc,EACHK,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnC9B,EAAc8B,EAAGnB,GACjBA,GAASiB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitButtonClick);\n\nfunction onSubmitButtonClick(e) {\n  e.preventDefault();\n  const firstDelayNum = Number(refs.firstDelay.value);\n  const delayStepNum = Number(refs.delayStep.value);\n  const amountNum = Number(refs.amount.value);\n\n  let delay = firstDelayNum;\n  for (let i = 1; i <= amountNum; i += 1) {\n    createPromise(i, delay);\n    delay += delayStepNum;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(\n      ({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      },\n      ({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    )\n    .catch(err => {\n      console.log(err);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","failure","catch","err","console","log","addEventListener","e","preventDefault","firstDelayNum","Number","value","delayStepNum","amountNum","i"],"version":3,"file":"03-promises.7d128bfd.js.map"}