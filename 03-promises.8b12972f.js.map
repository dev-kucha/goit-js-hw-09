{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,kBA0BjC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAjCPT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAA6BC,GAC3BA,EAAEC,iBACF,MAAMC,EAAgBC,OAAOrB,EAAKI,WAAWkB,OACvCC,EAAeF,OAAOrB,EAAKK,UAAUiB,OACrCE,EAAYH,OAAOrB,EAAKM,OAAOgB,OAErC,IAAIG,EAAQL,EACZ,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAWE,GAAK,EACnCnB,EAAcmB,EAAGD,GACdE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAGtDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA8B,OAAOG,QAAQ,sBAAoBvB,QAAiBC,UAGxDgB,GAASF,KAkBbhB,EAAc,EAAG,MACdoB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,UAEnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitButtonClick);\n\nfunction onSubmitButtonClick(e) {\n  e.preventDefault();\n  const firstDelayNum = Number(refs.firstDelay.value);\n  const delayStepNum = Number(refs.delayStep.value);\n  const amountNum = Number(refs.amount.value);\n\n  let delay = firstDelayNum;\n  for (let i = 1; i <= amountNum; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // return { position, delay };\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // return { position, delay };\n      });\n    delay += delayStepNum;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelayNum","Number","value","delayStepNum","amountNum","delay1","i","then","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.8b12972f.js.map"}